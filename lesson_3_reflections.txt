Q. When would you want to create a remote repository rather than keeping all your 	      work local?

A. You would create a remote repository so you can collaborate with others and so you can work on your project from different devices.

Q. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

A. To give me control over what changes are added and when. 

Q. Describe the difference between forks, clones, and branches. When would you use one instead of another?

A. Forks are used when you are cloning a repository on GitHub. For example when you cloned Larry’s recipe repository to your GitHub account, that is called forking. Forking is like cloning, but on GitHub not on your local computer. Once you have forked a repository to your profile, you can clone it to your local machine, so you can work on the project locally. When you do this GitHub creates a remote for you. Branches are used when you want to try something with your code, but don’t want to make changes to the master. You can merge a branch into the master once you are satisfied with it and want it to be part of the master file. 
You would use forks when you want to clone a repository on GitHub, you would use clones when you want to copy that repository to your local computer, and you would use branches when you want to try something with your code, but don’t want to commit it to the master.

Q. What is the benefit of having a copy of the last known state of the remote stored locally?

A. It will help you track what changes you have made compared to the online repository and will help you resolve conflicting commits when working on a project with multiple contributors. 

Q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

A. To collaborate without using GitHub you could email or use Dropbox. Most people know how to use them email and Dropbox is fairly simple, but not everyone knows how to use Git and GitHub. Git and GitHub have a much steeper learning curve. It would be harder to use email and Dropbox because it would be more difficult to track changes, commits, and conflicts. 

Q. When would you want to make changes in a separate branch rather than directly in master? What benefit does each approach have?

A. You would want to make changes in a separate branch so you can experiment with your changes without changing the master. Also you would want to pull changes into your local master so that it is up to date with the remote master so that when you do merge your branch into the master you don’t erase the changes made to the remote master. 